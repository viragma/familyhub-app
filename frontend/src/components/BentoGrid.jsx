import React, { useState, useEffect } from 'react';
import BentoCard from './BentoCard';

function BentoGrid() {
const [dashboardData, setDashboardData] = useState(null);
  useEffect(() => {
    // Egy aszinkron funkci√≥t defini√°lunk az adatlek√©r√©shez.
    const fetchTasks = async () => {
      try {
        const response = await fetch('http://192.168.1.6:8000/api/dashboard');
        const data = await response.json();
         setDashboardData(data);
      } catch (error) {
        console.error("Hiba a dashboard adatok lek√©r√©sekor:", error);
      }
    };

    fetchTasks(); // Megh√≠vjuk a funkci√≥t.
  }, []); // Az √ºres t√∂mb a v√©g√©n biztos√≠tja, hogy ez csak egyszer fusson le.

 const handleTaskToggle = async (taskId) => { // Legyen a funkci√≥ async
    // Optimistic UI Update: Azonnal friss√≠tj√ºk a fel√ºletet a jobb felhaszn√°l√≥i √©lm√©ny√©rt
    const newData = JSON.parse(JSON.stringify(dashboardData));
    const taskToToggle = newData.tasks.find(task => task.id === taskId);
    if (taskToToggle) {
      taskToToggle.done = !taskToToggle.done;
      setDashboardData(newData);
    }

    // === √öJ R√âSZ: API H√çV√ÅS A BACKENDNEK ===
    try {
      await fetch(`http://192.168.1.6:8000/api/tasks/${taskId}/toggle`, {
        method: 'POST', // Megadjuk a met√≥dust
      });
      // Itt nem kell √∫jra lek√©rni az adatokat, mert az "optimistic update" m√°r megt√∂rt√©nt.
      // Hiba eset√©n lehetne vissza√°ll√≠tani a r√©gi √°llapotot.
    } catch (error) {
      console.error("Hiba a feladat √°llapot√°nak friss√≠t√©sekor:", error);
      // Hiba eset√©n vissza√°ll√≠thatn√°nk az UI-t az eredeti √°llapotra.
    }
  };

  if (!dashboardData) {
    return <div style={{ textAlign: 'center', padding: '2rem' }}>Adatok bet√∂lt√©se...</div>;
  }
  
  // Sz√°moljuk ki a nyaral√°s alap sz√°zal√©kos √©rt√©k√©t
  const goalPercentage = (dashboardData.goal.current / dashboardData.goal.target) * 100;

  return (
    <div className="bento-grid">
      {/* Csal√°di Egyenleg k√°rtya */}
      <BentoCard title="Csal√°di Egyenleg" icon="üí∞" className="card-wide">
           <div>
          <div className="balance-amount">{dashboardData.balance.amount.toLocaleString()} Ft</div>
          <span className="balance-change">‚Üë +{dashboardData.balance.change_percent}% a m√∫lt h√≥naphoz k√©pest</span>
          <div className="quick-actions">
            <a href="#" className="action-btn">
              <span className="action-icon">‚ûï</span>
              <span className="action-label">Bev√©tel</span>
            </a>
            <a href="#" className="action-btn">
              <span className="action-icon">‚ûñ</span>
              <span className="action-label">Kiad√°s</span>
            </a>
            <a href="#" className="action-btn">
              <span className="action-icon">üîÑ</span>
              <span className="action-label">√Åtutal√°s</span>
            </a>
            <a href="#" className="action-btn">
              <span className="action-icon">üìä</span>
              <span className="action-label">Riport</span>
            </a>
          </div>
        </div>
      </BentoCard>

  {/* Havi Statisztika k√°rtya */}
      <BentoCard title="Havi Statisztika" icon="üìà">
        <div className="stats-grid">
          <div className="stat-item">
            <div className="stat-label">Bev√©tel</div>
            <div className="stat-value" style={{ color: 'var(--success)' }}>+{dashboardData.stats.income.toLocaleString()}</div>
          </div>
          <div className="stat-item">
            <div className="stat-label">Kiad√°s</div>
            <div className="stat-value" style={{ color: 'var(--danger)' }}>-{dashboardData.stats.expense.toLocaleString()}</div>
          </div>
          <div className="stat-item">
            <div className="stat-label">Megtakar√≠t√°s</div>
            <div className="stat-value">{dashboardData.stats.savings.toLocaleString()}</div>
          </div>
          <div className="stat-item">
            <div className="stat-label">C√©lok</div>
            <div className="stat-value">{dashboardData.stats.goals_progress}%</div>
          </div>
        </div>
      </BentoCard>
     {/* Nyaral√°s Alap k√°rtya */}
      <BentoCard title={dashboardData.goal.name} icon="üèñÔ∏è">
        <div>
          <div className="progress-container">
            <div className="progress-header">
              <span>{dashboardData.goal.current.toLocaleString()} Ft / {dashboardData.goal.target.toLocaleString()} Ft</span>
              <span style={{ color: 'var(--accent-primary)' }}>{goalPercentage.toFixed(0)}%</span>
            </div>
            <div className="progress-bar">
              <div className="progress-fill" style={{ width: `${goalPercentage}%` }}></div>
            </div>
          </div>
          <p style={{ marginTop: '1rem', fontSize: '0.875rem', color: 'var(--text-secondary)' }}>
            M√©g 3 h√≥nap a c√©lhoz ‚Ä¢ Havi 60,000 Ft
          </p>
        </div>
      </BentoCard>

      {/* Mai Feladatok k√°rtya */}
     <BentoCard title="Mai Feladatok" icon="‚úÖ" className="card-tall">
        <div className="task-list">
          {dashboardData.tasks.map((task) => (
            <div className="task-item" key={task.id} onClick={() => handleTaskToggle(task.id)}>
              <div className="task-info">
                <div className={`task-checkbox ${task.done ? 'checked' : ''}`}></div>
                <div>
                  <div style={{ fontWeight: 500 }}>{task.title}</div>
                  <div style={{ fontSize: '0.75rem', color: 'var(--text-secondary)' }}>
                    {task.owner}
                  </div>
                </div>
              </div>
              <div className="task-reward">{task.reward}</div>
            </div>
          ))}
        </div>
      </BentoCard>

       <BentoCard title="Csal√°d" icon="üë®‚Äçüë©‚Äçüëß‚Äçüë¶">
        <div className="members-grid">
          {dashboardData.family.map((member) => (
            <div className="member-card" key={member.name}>
              <div className="member-avatar" style={{ background: member.color }}>
                {member.initial}
                {/* Felt√©teles renderel√©s: a st√°tusz p√∂tty csak akkor jelenik meg,
                    ha a "member.online" √©rt√©ke igaz. */}
                {member.online && <div className="member-status"></div>}
              </div>
              <div className="member-name">{member.name}</div>
            </div>
          ))}
        </div>
      </BentoCard>

      <BentoCard title="Bev√°s√°rl√≥lista" icon="üõí">
        <div style={{ marginTop: '1rem' }}>
          {dashboardData.shopping_list.items.map((item, index) => (
            <div className="shopping-item" key={index}>
              <div className="shopping-checkbox"></div>
              <span>{item}</span>
            </div>
          ))}
        </div>
        <p style={{ marginTop: '1rem', fontSize: '0.875rem', color: 'var(--text-secondary)' }}>
          Becs√ºlt k√∂lts√©g: ~8,500 Ft
        </p>
      </BentoCard>
    </div>
    
  );
}

export default BentoGrid;