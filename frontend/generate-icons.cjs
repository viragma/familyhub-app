const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

// Az SVG ikon el√©r√©si √∫tja
const iconPath = path.join(__dirname, 'public', 'icon.svg');
const publicDir = path.join(__dirname, 'public');

// Ellen≈ërizz√ºk, hogy l√©tezik-e az SVG f√°jl
if (!fs.existsSync(iconPath)) {
  console.error('Az icon.svg f√°jl nem tal√°lhat√≥!');
  process.exit(1);
}

// PWA ikonm√©retek
const sizes = [
  16, 32, 72, 96, 120, 128, 144, 152, 180, 192, 384, 512
];

async function generateIcons() {
  console.log('PWA ikonok gener√°l√°sa...');
  
  for (const size of sizes) {
    const outputPath = path.join(publicDir, `icon-${size}x${size}.png`);
    
    try {
      await sharp(iconPath)
        .resize(size, size)
        .png()
        .toFile(outputPath);
      
      console.log(`‚úÖ Gener√°lva: icon-${size}x${size}.png`);
    } catch (error) {
      console.error(`‚ùå Hiba a ${size}x${size} ikon gener√°l√°s√°n√°l:`, error);
    }
  }
  
  // Favicon.ico gener√°l√°s
  try {
    await sharp(iconPath)
      .resize(32, 32)
      .png()
      .toFile(path.join(publicDir, 'favicon.png'));
    console.log('‚úÖ Gener√°lva: favicon.png');
  } catch (error) {
    console.error('‚ùå Hiba a favicon gener√°l√°s√°n√°l:', error);
  }
  
  console.log('üéâ Ikonok sikeresen gener√°lva!');
}

generateIcons().catch(console.error);
